definitions:
  handlers.AuthResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/handlers.UserResponse'
    type: object
  handlers.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  handlers.ResetPasswordRequest:
    properties:
      password:
        minLength: 6
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  handlers.SendVerificationRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  handlers.UserResponse:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
  handlers.VerifyEmailRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
info:
  contact: {}
paths:
  /auth/facebook:
    get:
      description: Redirects user to Facebook's OAuth consent screen
      produces:
      - application/json
      responses: {}
      summary: Start Facebook OAuth
      tags:
      - Auth
  /auth/facebook/callback:
    get:
      description: Handles OAuth callback from Facebook
      parameters:
      - description: State
        in: query
        name: state
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Facebook OAuth callback
      tags:
      - Auth
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Send password reset email to user
      parameters:
      - description: Forgot password payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Send password reset email
      tags:
      - Auth
  /auth/github:
    get:
      description: Redirects user to Github's OAuth consent screen
      produces:
      - application/json
      responses: {}
      summary: Start Github OAuth
      tags:
      - Auth
  /auth/github/callback:
    get:
      description: Handles OAuth callback from Github
      parameters:
      - description: State
        in: query
        name: state
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Github OAuth callback
      tags:
      - Auth
  /auth/google:
    get:
      description: Redirects user to Google's OAuth consent screen
      produces:
      - application/json
      responses: {}
      summary: Start Google OAuth
      tags:
      - Auth
  /auth/google/callback:
    get:
      description: Handles OAuth callback from Google
      parameters:
      - description: State
        in: query
        name: state
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Google OAuth callback
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access token
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate refresh token and end user session
      parameters:
      - description: Logout payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Logout user
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Exchange refresh token for new access and refresh tokens
      parameters:
      - description: Refresh payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Refresh tokens
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with email and password
      parameters:
      - description: Register payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Auth
  /auth/resend-verification:
    post:
      consumes:
      - application/json
      parameters:
      - description: Resend payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.SendVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Resend verification code
      tags:
      - Auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password using reset token
      parameters:
      - description: Reset password payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Reset user password
      tags:
      - Auth
  /auth/send-verification:
    post:
      consumes:
      - application/json
      parameters:
      - description: Send verification payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.SendVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Send verification code
      tags:
      - Auth
  /auth/verify-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Verify payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.VerifyEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Verify verification code
      tags:
      - Auth
swagger: "2.0"
